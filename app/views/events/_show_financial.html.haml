-provide(:title, "Event | #{@event.pretty_id}")

- @event.line_items.each do |li|
  .auto_size_modal.modal.hide.fade{"id"=>"edit_line_item_form_" + li.id.to_s}
    = render :partial => "line_items/edit", :locals => {line_item: li, commit_text: "Edit Line Item"}
.duplicate_event_form.modal.hide.fade{"id"=>"duplicate_event_form"}
  = render :partial => "events/duplicate_financial_event", :locals => {event: @event}

-if @event.can_destroy?
  #confirmation-delete-modal.modal.hide.fade
    .modal-header
      %button.close{:type=>"button", "data-dismiss"=>"modal"}
        &times;
      %h3.center Caution
    .modal-body
      %p Are you sure you want to delete this event? This action cannot be reversed. 
    .modal-footer
      %a.btn.btn-danger{:href=>event_path(@event), :"data-method" => "delete" }
        Yes, Delete this event
      %a.btn{"data-dismiss"=>"modal"}
        No, Return to the event.

#event-details
  .row-fluid
    .span12
      %h2 Event Details
      %b.event-id
        %br
        ID: 
        = @event.pretty_id
        .pull-right
          Created by: 
          = @event.created_by.nil? ? '-' : @event.created_by.name
        %br
        Product Type: 
        = Product.find_parent(@event.product).titleize
        .pull-right
          Created on: 
          = @event.created_at.strftime("%m/%d/%y")
      %hr

  .row-fluid
    .span6
      = simple_form_for(@event) do |f|
        .row-fluid
          .span6
            %h4 General
            = f.input :name, label: "Event Name"
            = f.input :status, collection: @event.status == Status::Event.auto_generated ? Status::Event.available_values.collect{|c| [c.titleize, c]} : Status::Event.available_values_for_user.collect{|c| [c.titleize, c]}
            = f.input :product, collection: Product.get_available_products(Product.find_parent(@event.product)).collect{|c| [c.titleize, c]}, disabled: true
            %div{class:"js-event-cancellation-reason", style: (@event.status == Status::Event.canceled) ? "" : "display: none;"} 
              = f.input :cancellation_reason, collection: CancellationReason.get_available_reasons(Product.find_parent(@event.product)).collect{|c| [c.titleize, c]}
              = f.input :canceled_within_24_hours, inline_label: "Canceled Within 24 Hours", label: false
          .span6
            %h4 Account Details
            = f.input :account, 
              input_html: {value: @event.account.name},
              wrapper_html: { class: "inline_field_wrapper" }, 
              as: :string,
              readonly: true,
              label: "Account name"
        .row-fluid
          .span12
            %hr
            %h4 Schedule
        .row-fluid
          .span6
            Time
            %br
            .input-append.date.form_datetime
              %input{:size => "16", :type => "text", :name => "event[event_start_time]", :value => "#{@event.event_start_time.strftime("%d %B %Y - %I:%M %p") unless @event.event_start_time.nil?}"}
              %span.add-on
                %i.icon-remove
              %span.add-on
                %i.icon-th

        %br
        %br
        %br
        .form-actions
          -if @event.can_destroy?
            %a.btn.btn-danger.toggle-modal{"data-target"=>"#confirmation-delete-modal"}
              %i.icon.icon-remove.icon-white{"data-target"=>"#confirmation-delete-modal"}
              Delete
          -else 
            %a.btn.disabled
              %i.icon.icon-remove.icon-white
              Delete
          .pull-right.clearfix
            %a.btn.toggle-modal{"data-target"=>"#duplicate_event_form"}
              Duplicate Event
            = f.submit "Save Event", :class => "btn btn-primary"
    .span6
      .row-fluid
        =render :partial => "events/partials_financials/financials_billing_references"

  %ul#section-tab-navigation.nav.nav-tabs
    %li{class: params[:selected].nil? || params[:selected] == "financials" ? 'active' : ''}
      %a{:href=>"#financials"} Financials
    %li{class: params[:selected] == "issues" ? 'active' : ''}
      %a{:href=>"#issues"} Issues

  #section-tabs

    #financials.section-tab{style: params[:selected].nil? || params[:selected] == "financials" ? '' : 'display:none'}
      - if Product.find_parent(@event.product) == "managed_services"
        .row
          .span6.offset3
            #break
              = render :partial => "events/partials_financials/financials_summary"
        = render :partial => "events/partials_financials/financials_revenue", :locals => {event: @event, title: "Account Revenue", party: @event.account, include_menu_items: true, event_transaction_method: @event.event_transaction_method}
        - unless @event.event_vendors.nil?
          - @event.event_vendors.each do |ev|
            %br
            = render :partial => "events/partials_financials/financials_expense", :locals => {event: @event, title: "Cost of Goods Sold", party: ev.vendor, include_menu_items: true, event_transaction_method: ev.event_transaction_method, tax_rate: ((defined? @event.location.building.market.default_tax_rate) ? @event.location.building.market.default_tax_rate : 0)}
        = render 'events/partials_financials/documents'

    #issues.section-tab{style: params[:selected] == "issues" ? '' : 'display:none'}
      = render :partial => "issues/issues", :locals => {subject: @event}

